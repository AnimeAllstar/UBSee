const $=go.GraphObject.make;let myGraph;let myData;async function setMyData(url){const response=await fetch(url);myData=await response.json()}function getHighlightedNodes(){const h=getParam("nodes");if(h){return h.split(",")}return null}const nodes=[];const links=[];function addToData(course){nodes.push({key:course.name,subject:course.subject,year:course.year,title:course.title,prereqs:course.prereqs,prereqText:course.prereqText,url:course.url,isClickable:course.prereqs.length===0?true:false,isSearched:false});links.push(course)}function iterateCourses(course,arg,func){const re=new RegExp(course.subject+"\\s\\d{3}","g");const courseList=course.prereqs.match(re);if(courseList){courseList.forEach(c=>{func(c,arg)})}}function recursiveAdd(course){addToData(course);iterateCourses(course,myData,(c,myData)=>{if(!nodes.some(e=>e.key===c)){const cElem=myData.find(elem=>{return elem.name===c});if(cElem){recursiveAdd(cElem,myData)}}})}async function setGlobal(params){await setMyData(window.location.origin+params.api);if(params.course&&params.subject){const root=myData.find(course=>{return course.name===params.subject+" "+params.course});recursiveAdd(root)}else{myData.forEach(course=>{addToData(course)})}}async function createGraph(params){await setGlobal(params);myGraph=getGraph("graph-div");myGraph.model=new go.GraphLinksModel(nodes);links.forEach(link=>{iterateCourses(link,link.name,(fromKey,toKey)=>{if(!links.some(e=>e.key===fromKey)){myGraph.model.addLinkData({from:fromKey,to:toKey})}})});setColors()}function setColors(){const highlightedNodes=getHighlightedNodes();if(highlightedNodes){while(highlightedNodes.length!=0){const elem=highlightedNodes.shift();const graphNode=myGraph.findNodeForKey(elem);if(graphNode){nodeClickHandler(graphNode);if(!graphNode.isHighlighted){highlightedNodes.push(elem)}}}}}function getGraph(id){return $(go.Diagram,id,{"undoManager.isEnabled":true,"toolManager.hoverDelay":500,"toolManager.toolTipDuration":3e4,initialAutoScale:go.Diagram.Uniform,layout:createLayout(),nodeTemplate:createNodeTemplate(),linkTemplate:createLinkTemplate(),allowDelete:false,allowCopy:false,allowMove:false,allowInsert:false})}function createLayout(){return layout=$(go.LayeredDigraphLayout,{direction:0,layerSpacing:100,columnSpacing:10,linkSpacing:7,layeringOption:go.LayeredDigraphLayout.LayerLongestPathSource})}function createNodeTemplate(){return nodeTemplate=$(go.Node,"Auto",{selectionAdorned:false,click:function(e,node){nodeClickHandler(node)},toolTip:createToolTip(),contextMenu:createContextMenu()},$(go.Shape,"Rectangle",{strokeWidth:2,stroke:"#000",name:"shape"},new go.Binding("scale","",node=>{return node.data.isSearched?1.3:1}).ofObject(),new go.Binding("fill","",node=>{if(node.data.isClickable){if(node.isHighlighted){return"#1e90ff"}else{return"#1ec887"}}else{return"#ff1a53"}}).ofObject()),$(go.TextBlock,"course id",{margin:12,stroke:"#fff",font:"bold 16px sans-serif"},new go.Binding("text","key")))}function createLinkTemplate(){return LinkTemplate=$(go.Link,{routing:go.Link.Normal,corner:0},$(go.Shape,new go.Binding("stroke","isHighlighted",h=>{return h?"#1ec887":"#000"}).ofObject(),new go.Binding("strokeWidth","isHighlighted",h=>{return h?3:1}).ofObject()),$(go.Shape,{toArrow:"Standard",strokeWidth:0},new go.Binding("fill","isHighlighted",h=>{return h?"#1ec887":"#000"}).ofObject(),new go.Binding("fill","isSelected",sel=>{return sel?"#1e90ff":"#000"}).ofObject()))}function createToolTip(){if(isTouchDevice()&&isMobileDevice()){return null}return ToolTip=$("ToolTip",{"Border.fill":"#ffffff"},$(go.Panel,"Vertical",$(go.TextBlock,{margin:new go.Margin(0,2,2,4),text:"Course Information",font:"11pt sans-serif",alignment:go.Spot.Left,wrap:go.TextBlock.WrapFit}),$(go.TextBlock,{margin:new go.Margin(0,2,2,4),width:300,alignment:go.Spot.Left,font:"10pt sans-serif",wrap:go.TextBlock.WrapFit},new go.Binding("text","",data=>{return`${data.title}`})),$(go.TextBlock,{margin:new go.Margin(0,2,0,4),width:300,alignment:go.Spot.Left,font:"9pt sans-serif",wrap:go.TextBlock.WrapFit},new go.Binding("text","",data=>{return`Pre-reqs: ${data.prereqText}`}))))}function createContextMenu(){return ContextMenu=$("ContextMenu",getContextMenuButton("Course Page","text1","shape1",(e,obj)=>{window.open(obj.part.data.url)}),getContextMenuButton("Course Graph","text2","shape2",(e,obj)=>{openCourseGraph(obj)}))}function openCourseGraph(obj){const key=obj.part.data.key.split(" ");window.open(`/subject/${key[0]}/course/${key[1]}`)}function getContextMenuButton(label,textBox,Shape,func){return $("ContextMenuButton",$(go.Shape,"Rectangle",{stroke:null,maxSize:new go.Size(95,25),fill:"#fff",name:Shape}),$(go.TextBlock,label,{name:textBox,background:"#fff",font:"14px sans-serif",click:func}),{mouseEnter:(e,obj)=>{obj.findObject(Shape).fill="#0d6efd";obj.findObject(textBox).background="#0d6efd";obj.findObject(textBox).stroke="#fff"},mouseLeave:(e,obj)=>{obj.findObject(Shape).fill="#fff";obj.findObject(textBox).background="#fff";obj.findObject(textBox).stroke="#000"}})}function nodeClickHandler(node){if(node.data.isClickable){updateHighlight(node,!node.isHighlighted)}}function updateHighlight(node,val){const graph=node.diagram;graph.startTransaction("highlight");node.isHighlighted=val;node.findLinksOutOf().each(l=>{l.isHighlighted=val});node.findNodesOutOf().each(node=>{recursiveUpdateHighlight(node)});graph.commitTransaction("highlight")}function recursiveUpdateHighlight(node){updateIsclickable(node);if(node.data.isClickable){return}if(node.isHighlighted===true){updateHighlight(node,false)}}function getNewState(node,prereqs){node.findLinksInto().each(l=>{const newState=l.isHighlighted?true:false;const re=new RegExp(l.data.from,"g");prereqs=prereqs.replaceAll(re,newState)});return eval(prereqs)}function updateIsclickable(node){const prereqs=node.data.prereqs;if(prereqs.length===0){return}const newState=getNewState(node,prereqs);updateData(node,"isClickable",newState,"change isClickable")}function updateDataForAll(collection,property,newVal,tname){collection.each(node=>{updateData(node,property,newVal,tname)})}function updateData(node,property,newVal,tname){node.diagram.model.commit(model=>{model.set(node.data,property,newVal)},tname)}const copyBtn=document.getElementById("copyBtn");const copyTooltip=new bootstrap.Tooltip(copyBtn,{boundary:document.body});copyBtn.addEventListener("hidden.bs.tooltip",()=>{copyBtn.setAttribute("data-bs-original-title","Copies URL of current graph to clipboard")});function copyToClipboard(){const inputc=document.body.appendChild(document.createElement("input"));inputc.value=getNewURL();inputc.focus();inputc.select();document.execCommand("copy");inputc.parentNode.removeChild(inputc);updateCopyTooltip()}function getNewURL(){const url=new URL(window.location.href);let nodeArr=[];myGraph.nodes.each(node=>{if(node.isHighlighted){nodeArr.push(node.data.key)}});url.searchParams.set("nodes",nodeArr.join(","));return url}function updateCopyTooltip(){copyBtn.setAttribute("data-bs-original-title","URL copied!");copyTooltip.update();copyTooltip.show()}function openTab(){const subject=document.getElementById("subject-select").value;const course=document.getElementById("course-select").value;const year=document.getElementById("displayRange").value;if(subject&&course){window.open(`/subject/${subject}/course/${course.split(" ")[1]}`)}else if(subject){window.open(`/subject/${subject}?year=${year}`)}}function updateAppearance(){myGraph.startTransaction("update appearance");setLayeringOption(getRadioValue("layering"));myGraph.layout.direction=parseInt(getRadioValue("direction"));myGraph.commitTransaction("update appearance")}function getRadioValue(name){let radio=document.getElementsByName(name);for(let i=0;i<radio.length;i++){if(radio[i].checked){return radio[i].value}}}function setLayeringOption(layering){if(layering==0){myGraph.layout.layeringOption=go.LayeredDigraphLayout.LayerLongestPathSource}else if(layering==1){myGraph.layout.layeringOption=go.LayeredDigraphLayout.LayerLongestPathSink}else if(layering==2){myGraph.layout.layeringOption=go.LayeredDigraphLayout.LayerOptimalLinkLength}}function getCheckboxes(name){let checkboxes=document.getElementsByName(name);let unchecked=[];checkboxes.forEach(box=>{if(!box.checked){unchecked.push(box.value)}});return unchecked}function updateDisplayText(val){document.getElementById("displayRangeText").innerText="Display courses up to year "+val}function updateFocus(){const checkedArr=getCheckboxes("focus");if(checkedArr){updateOpacity(checkedArr)}}function updateOpacity(arr){myGraph.nodes.each(function(node){const shape=node.findObject("shape");shape.opacity=1;for(let i=0;i<arr.length;i++){if(node.data.key.split(" ")[1].substring(0,1)==arr[i]){shape.opacity=.4;break}}})}function searchGraph(){const searchString=document.getElementById("search-input");if(searchString.value){const safe=searchString.value.replace(/[.*+?^${}()|[\]\\]/g,"\\$&");const regex=new RegExp(safe,"i");const results=myGraph.findNodesByExample({key:regex},{title:regex});updateDataForAll(results,"isSearched",true,"set isSearched to true")}}function clearSelection(){const searchedNodes=myGraph.findNodesByExample({isSearched:true});updateDataForAll(searchedNodes,"isSearched",false,"set isSearched to false for searched nodes")}jQuery.noConflict();let selectData;jQuery(document).ready(function(){setSelect("#subject-select",null,false);setSelect("#course-select",null,false);getSelectData(setSelect)});async function getSelectData(callback){const response=await fetch("/api/subjects");selectData=await response.json();const d=selectData.map(subject=>{return subject.name});callback("#subject-select",d,false)}function setSelect(id,data,clear){jQuery(id).select2({data:data,theme:"bootstrap-5",placeholder:"Subject",allowClear:clear,selectionCssClass:"select2--small",dropdownCssClass:"select2--small"})}jQuery("#subject-select").on("select2:selecting",function(e){jQuery("#course-select").empty().trigger("change");const subject=selectData.find(subject=>subject.name===e.params.args.data.text);setSelect("#course-select",subject.courses,true);jQuery("#course-select").append(new Option("","",true,true)).trigger("change");jQuery("select").on("select2:clear",function(evt){jQuery(this).on("select2:opening.cancelOpen",function(evt){evt.preventDefault();jQuery(this).off("select2:opening.cancelOpen")})})});function getParam(param){const urlParams=new URLSearchParams(window.location.search);return urlParams.get(param)}function isTouchDevice(){return"ontouchstart"in window||navigator.maxTouchPoints>0||navigator.msMaxTouchPoints>0}function isMobileDevice(){return/Android|webOS|iPhone|iPad|Mac|Macintosh|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)}